{"version":3,"file":"static/js/503.3915021b.chunk.js","mappings":"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","sources":["assets/icons/arrow-accord.svg","templates/QnaATemplate/QnATemplate.tsx","components/QnA/qna-list.ts","components/QnA/QnA.tsx","templates/TitleHeaderTemplate/TitleHeaderTemplate.tsx","components/TitleHeader.tsx","assets/icons/telegram.svg","components/ContactUs/ContactUs.tsx","pages/SupportPage.tsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowAccord(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 12C0 18.6274 5.37256 24 12 24C18.6274 24 24 18.6274 24 12C24 5.37261 18.6274 4.95911e-05 12 4.95911e-05C5.37569 0.00748444 0.00748369 5.37569 0 12Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.11282 9.80878C4.21825 10.7449 4.21825 12.2191 5.11282 13.1552C6.03635 14.0793 7.53416 14.0798 8.45823 13.1562C8.45857 13.1559 8.45891 13.1556 8.45925 13.1552L9.39838 12.2161V18.261C9.39838 19.7017 10.5663 20.8696 12.0071 20.8696C13.4478 20.8696 14.6158 19.7017 14.6158 18.261V12.2161L15.5549 13.1552C16.5417 14.0123 18.0365 13.9071 18.8936 12.9202C19.6692 12.0271 19.6664 10.6985 18.8868 9.80878L13.1028 4.02477C12.4915 3.41375 11.5008 3.41375 10.8895 4.02477L5.11282 9.80878Z\",\n    fill: \"#2790CB\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowAccord);\nexport default __webpack_public_path__ + \"static/media/arrow-accord.e77e9858ebc9edd90eff6b3f300aa140.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport arrow from \"../../assets/icons/arrow-accord.svg\";\r\nimport { IQnATemplateProps } from \"../../interfaces/IQnATemplateProps\";\r\nimport \"./styles.css\";\r\n\r\nconst styles = {\r\n  body: `rounded-3xl overflow-hidden`,\r\n  questionContainer: `\r\n    relative z-[100] w-full flex flex-row justify-between items-center p-6 rounded-full bg-light_blue\r\n    phone:p-4\r\n  `,\r\n  questionText: `\r\n    font-english font-[900] text-white text-[1.25rem]\r\n    phone:text-[1.2rem]\r\n  `,\r\n  answersContainer: `relative z-[99] rounded-bl-3xl rounded-br-3xl shadow-md transition-all ease-in-out duration-300 overflow-hidden origin-top`,\r\n  answersText: `\r\n    font-russian font-normal text-dark_blue text-[1.25rem]\r\n    phone:text-[1.2rem]\r\n  `,\r\n};\r\n\r\nconst QnATemplate: React.FC<IQnATemplateProps> = ({ question, answer }) => {\r\n  const [clicked, setClicked] = useState<boolean>(false);\r\n\r\n  const handleToggle = () => {\r\n    if (!clicked) {\r\n      return setClicked(true);\r\n    }\r\n    setClicked(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <button className={styles.questionContainer} onClick={handleToggle}>\r\n        <h2 className={styles.questionText}>{question}</h2>\r\n        <img\r\n          src={arrow}\r\n          style={{ transition: \"all 300ms ease-in-out\" }}\r\n          className={clicked ? \"rotate-180\" : \"rotate-0\"}\r\n          alt=\"arrow\"\r\n        />\r\n      </button>\r\n      <div className={`${styles.answersContainer} ${clicked ? \"-translate-y-0 max-h-max p-6\" : \"-translate-y-[200%] max-h-0 p-0\"}`}>\r\n        <p className={styles.answersText}>{answer}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QnATemplate;\r\n","export const qnaList = [\r\n  {\r\n    id: 1,\r\n    question: \"Как начать играть в chickengame?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Как пополнить баланс?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Есть ли у вас баллы, pay points, cash points и др.?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Как скоро я смогу начать выводить деньги?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Есть ли еще какой либо заработок на проекте?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    question: \"Есть ли у вас партнерская программа?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 7,\r\n    question: \"Как мне привлечь рефералов?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 8,\r\n    question: \"Как вывести средстав с проекта?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 9,\r\n    question: \"Как восстановить пароль от личного кабинета?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 10,\r\n    question: \"Не нашли ответа?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QnATemplate from \"../../templates/QnaATemplate/QnATemplate\";\r\nimport { IQnAListProps } from \"../../interfaces/IQnAListProps\";\r\nimport { qnaList } from './qna-list';\r\n\r\nconst styles = {\r\n  wrapper: `w-screen flex justify-center items-center`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full\r\n    tablet:w-full\r\n    laptop:w-full\r\n    desktop:w-[90%]\r\n  `,\r\n  content: `flex flex-col gap-20`,\r\n  title: `\r\n    font-english font-[900] text-dark_blue text-[3.5rem] text-center\r\n    phone:text-[3rem]\r\n  `,\r\n  qnaContainer: `\r\n    flex flex-row justify-between gap-10\r\n    phone:flex-col phone:p-4\r\n    tablet:flex-col tablet:p-6\r\n    laptop:flex-col laptop:p-12\r\n  `,\r\n  list: `w-full flex flex-col gap-5`\r\n};\r\n\r\nconst QnA = () => {\r\n  const [firstListPart, setFirstListPart] = useState<IQnAListProps[]>()\r\n  const [secondListPart, setSecondListPart] = useState<IQnAListProps[]>()\r\n\r\n  const devideArray = (array: IQnAListProps[]) => {\r\n    const array_size = 5;\r\n    \r\n    const sliced_array = [];\r\n    \r\n    for (let i = 0; i <array.length; i += array_size) {\r\n        sliced_array.push(array.slice(i, i + array_size));\r\n    }\r\n    \r\n    setFirstListPart(sliced_array[0])\r\n    setSecondListPart(sliced_array[1])\r\n  }\r\n\r\n  useEffect(() => {\r\n    devideArray(qnaList)\r\n  }, [])\r\n  \r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <h1 className={styles.title}>Готовые ответы на вопросы</h1>\r\n          <ul className={styles.qnaContainer}>\r\n            <div className={styles.list}>\r\n              {firstListPart?.map((item) => (\r\n                <QnATemplate\r\n                  key={item.id}\r\n                  question={item.question}\r\n                  answer={item.answer}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className={styles.list}>\r\n              {secondListPart?.map((item) => (\r\n                <QnATemplate\r\n                  key={item.id}\r\n                  question={item.question}\r\n                  answer={item.answer}\r\n                />\r\n              ))}\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QnA;\r\n","import React from 'react';\r\nimport { ITitleHeaderTemplateProps } from '../../interfaces/ITitleHeaderTemplateProps';\r\nimport \"./styles.css\"\r\n\r\nconst styles = {\r\n  wrapper: `w-full h-[400px] flex items-center justify-center th-background`,\r\n  container: `\r\n    w-[70%] flex flex-row items-center\r\n    phone:w-full phone:justify-center\r\n    tablet:w-full tablet:justify-center\r\n    desktop:w-[90%]\r\n  `,\r\n  name: `\r\n    font-english font-[900] text-[3.5rem] text-dark_blue\r\n    phone:text-[3rem] phone:text-center\r\n  `\r\n}\r\n\r\nconst TitleHeaderTemplate: React.FC<ITitleHeaderTemplateProps> = ({ name }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <h1 className={styles.name}>{name}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TitleHeaderTemplate","import React from 'react';\r\nimport TitleHeaderTemplate from '../templates/TitleHeaderTemplate/TitleHeaderTemplate';\r\nimport { ITitleHeaderProps } from '../interfaces/ITitleHeaderProps';\r\n\r\nconst styles = {\r\n  wrapper: `w-full`\r\n}\r\n\r\nconst TitleHeader: React.FC<ITitleHeaderProps> = ({ titleName, refCurrent }) => {\r\n  return (\r\n    <div ref={refCurrent} className={styles.wrapper}>\r\n      <TitleHeaderTemplate name={titleName} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TitleHeader;\r\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTelegram(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 30C23.2843 30 30 23.2843 30 15C30 6.71573 23.2843 0 15 0C6.71573 0 0 6.71573 0 15C0 23.2843 6.71573 30 15 30Z\",\n    fill: \"#039BE5\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.86481 14.675L21.3273 9.09875C21.9986 8.85625 22.5848 9.2625 22.3673 10.2775L22.3686 10.2762L19.9061 21.8775C19.7236 22.7 19.2348 22.9 18.5511 22.5125L14.8011 19.7487L12.9923 21.4912C12.7923 21.6912 12.6236 21.86 12.2361 21.86L12.5023 18.0437L19.4523 11.765C19.7548 11.4987 19.3848 11.3487 18.9861 11.6137L10.3973 17.0212L6.69481 15.8662C5.89106 15.6112 5.87356 15.0625 6.86481 14.675Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegram);\nexport default __webpack_public_path__ + \"static/media/telegram.b42dea8f015c8afe6dc421a86a3aa594.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport telegram from \"../../assets/icons/telegram.svg\";\r\nimport \"./styles.css\";\r\n\r\nconst styles = {\r\n  wrapper: `w-full flex justify-center items-center`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full\r\n    tablet:w-full\r\n    laptop:w-full\r\n    desktop:w-[90%]\r\n  `,\r\n  content: `\r\n    flex flex-col gap-16\r\n    phone:p-4\r\n    tablet:p-6\r\n    laptop:p-12\r\n  `,\r\n  titleContainer: `flex flex-col gap-5`,\r\n  titleText: `\r\n    font-english font-[900] text-[3.5rem] text-dark_blue\r\n    phone:text-[3rem] phone:text-center\r\n    tablet:text-center\r\n    \r\n  `,\r\n  subtitleText: `\r\n    font-russian font-normal text-[1.25rem] text-dark_blue\r\n    phone:text-[1.2rem] phone:text-center\r\n    tablet:text-center\r\n  `,\r\n  socialContainer: `\r\n    flex flex-row items-center gap-16\r\n    phone:flex-col phone:gap-8\r\n    tablet:justify-center\r\n  `,\r\n  linksContainer: `\r\n    flex flex-row items-center font-english font-[900] text-[1.875rem] gap-2\r\n    phone:text-[1.7rem]\r\n  `,\r\n  email: `text-dark_blue email-link`,\r\n  telegram: `flex flex-row gap-2 text-light_blue telegram-link`,\r\n  warningBody: `\r\n    w-full h-max flex flex-row items-center justify-center bg-light_green rounded-3xl gap-10\r\n    phone:flex-col\r\n  `,\r\n  infoIconContainer: `\r\n    w-[30%] flex items-center p-10 justify-center bg-green rounded-tl-3xl rounded-bl-3xl\r\n    phone:w-full phone:rounded-tl-3xl phone:rounded-tr-3xl phone:rounded-bl-none phone:p-4\r\n    tablet:w-[40%] tablet:p-14\r\n  `,\r\n  infoIcon: `\r\n    font-english font-[900] text-[9.75rem] text-white\r\n    phone:text-[6rem]\r\n  `,\r\n  warningContainer: `\r\n    flex flex-col p-10 gap-5 \r\n    phone:p-4\r\n    tablet:p-6\r\n  `,\r\n  warningTitle: `font-russian font-bold text-[1.5rem] text-white`,\r\n  warningText: `\r\n    font-russian font-normal text-[1.25rem] text-white\r\n    phone:text-[1.2rem]\r\n  `,\r\n};\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <div className={styles.titleContainer}>\r\n            <h1 className={styles.titleText}>Обратиться по любым вопросам</h1>\r\n            <h3 className={styles.subtitleText}>\r\n              Указывайте свой логин в проекте для более быстрого решения вашего\r\n              вопроса!\r\n            </h3>\r\n          </div>\r\n          <div className={styles.socialContainer}>\r\n            <a\r\n              className={styles.linksContainer}\r\n              href=\"mailto:support@gmail.com\"\r\n            >\r\n              <span className={styles.email}>support@gmail.com</span>\r\n            </a>\r\n            <a\r\n              className={styles.linksContainer}\r\n              href=\"https://t.me/jojjerg\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <span className={styles.telegram}>\r\n                <img src={telegram} alt=\"telegram\" />\r\n                Telegram\r\n              </span>\r\n            </a>\r\n          </div>\r\n          <div className={styles.warningBody}>\r\n            <div className={styles.infoIconContainer}>\r\n              <span className={styles.infoIcon}>!</span>\r\n            </div>\r\n            <div className={styles.warningContainer}>\r\n              <h1 className={styles.warningTitle}>\r\n                Вопросы без указания логина рассмотрены не будут!\r\n              </h1>\r\n              <p className={styles.warningText}>\r\n                По поводу рекламы (мониторинга проекта) просим не предлагать! У\r\n                нас свой список рекламы по которому мы работаем и других мы не\r\n                берём. Если вы в списке, мы обязательно вам напишем.\r\n              </p>\r\n              <p className={styles.warningText}>Спасибо за понимание.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","import React, { useRef, useLayoutEffect } from \"react\";\r\nimport TitleHeader from '../components/TitleHeader';\r\nimport QnA from \"../components/QnA/QnA\";\r\nimport ContactUs from \"../components/ContactUs/ContactUs\";\r\n\r\nconst styles = {\r\n  wrapper: `flex flex-col gap-40`,\r\n};\r\n\r\nconst SupportPage = () => {\r\n  const supportRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const handleScroll = (ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      window.scrollTo({\r\n        top: ref.offsetTop,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    handleScroll(supportRef.current)\r\n  })\r\n  \r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <TitleHeader titleName=\"Поддержка\" refCurrent={supportRef} />\r\n      <ContactUs />\r\n      <QnA />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SupportPage"],"names":["styles","question","answer","useState","clicked","setClicked","className","onClick","src","arrow","style","transition","alt","qnaList","id","firstListPart","setFirstListPart","secondListPart","setSecondListPart","useEffect","array","sliced_array","i","length","push","slice","devideArray","map","item","name","titleName","refCurrent","ref","href","target","rel","telegram","supportRef","useRef","useLayoutEffect","current","window","scrollTo","top","offsetTop","left","behavior","TitleHeader","QnA"],"sourceRoot":""}