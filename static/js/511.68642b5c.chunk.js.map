{"version":3,"file":"static/js/511.68642b5c.chunk.js","mappings":"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","sources":["components/ContestParticipants/participants-list.ts","templates/TitleHeaderTemplate/TitleHeaderTemplate.tsx","components/TitleHeader.tsx","components/ContestInformation.tsx","components/ContestParticipants/ContestParticipants.tsx","pages/ContestsPage.tsx","templates/InformationTemplate/InformationTemplate.tsx","templates/UsersAddDataTemplate.tsx","templates/UsersDataTemplate.tsx","templates/UsersTemplate.tsx"],"sourcesContent":["export const participantsList = [\r\n  {\r\n    id: 1,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 2,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 3,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 4,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 5,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 6,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 7,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 8,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 9,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 10,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 11,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 12,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 13,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 14,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 15,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 16,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 17,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 18,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 19,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n  {\r\n    id: 20,\r\n    txhash: \"0xA90653303883A649770254a1AbeFE575bB6Fd960\",\r\n    sum: 100\r\n  },\r\n]","import React from 'react';\r\nimport { ITitleHeaderTemplateProps } from '../../interfaces/ITitleHeaderTemplateProps';\r\nimport \"./styles.css\"\r\n\r\nconst styles = {\r\n  wrapper: `w-full h-[400px] flex items-center justify-center th-background`,\r\n  container: `\r\n    w-[70%] flex flex-row items-center\r\n    phone:w-full phone:justify-center\r\n    tablet:w-full tablet:justify-center\r\n    desktop:w-[90%]\r\n  `,\r\n  name: `\r\n    font-english font-[900] text-[3.5rem] text-dark_blue\r\n    phone:text-[3rem] phone:text-center\r\n  `\r\n}\r\n\r\nconst TitleHeaderTemplate: React.FC<ITitleHeaderTemplateProps> = ({ name }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <h1 className={styles.name}>{name}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TitleHeaderTemplate","import React from 'react';\r\nimport TitleHeaderTemplate from '../templates/TitleHeaderTemplate/TitleHeaderTemplate';\r\nimport { ITitleHeaderProps } from '../interfaces/ITitleHeaderProps';\r\n\r\nconst styles = {\r\n  wrapper: `w-full`\r\n}\r\n\r\nconst TitleHeader: React.FC<ITitleHeaderProps> = ({ titleName, refCurrent }) => {\r\n  return (\r\n    <div ref={refCurrent} className={styles.wrapper}>\r\n      <TitleHeaderTemplate name={titleName} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TitleHeader;\r\n","import React from \"react\";\r\nimport InformationTemplate from \"../templates/InformationTemplate/InformationTemplate\";\r\n\r\nconst styles = {\r\n  wrapper: `w-screen flex justify-center items-center`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full\r\n    tablet:w-full\r\n    laptop:w-full\r\n    desktop:w-[90%]\r\n  `,\r\n  content: `phone:p-4 tablet:p-4 laptop:p-6`,\r\n  text: `\r\n    font-russian font-normal text-white text-[1.5rem] text-center\r\n    phone:text-[1.2rem]\r\n  `,\r\n};\r\n\r\nconst ContestInformation = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <InformationTemplate title=\"Конкурсные баллы\">\r\n            <p className={styles.text}>\r\n              За каждое действие вами или вашим рефералом в момент проведения\r\n              конкурса начисляются баллы, 1 RUB = 1 балл. Чем больше у Вас\r\n              баллов, тем больше шанс победить в конкурсе. В конкурсе может\r\n              участвовать любой желающий и занять 1-е призовое место.\r\n            </p>\r\n          </InformationTemplate>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContestInformation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UsersDataTemplate from \"../../templates/UsersDataTemplate\";\r\nimport UsersTemplate from \"../../templates/UsersTemplate\";\r\nimport UsersAddDataTemplate from \"../../templates/UsersAddDataTemplate\";\r\nimport { IParticipantListProps } from \"../../interfaces/IParticipantsListProps\";\r\nimport { participantsList } from \"./participants-list\";\r\n\r\n\r\nconst styles = {\r\n  wrapper: `w-full flex justify-center items-center`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full\r\n    tablet:w-full\r\n    laptop:w-full\r\n    desktop:w-[90%]\r\n  `,\r\n  content: `\r\n    flex flex-row justify-center gap-8\r\n    phone:p-4 phone:flex-col\r\n    tablet:p-4 tablet:flex-col\r\n    laptop:p-4\r\n  `,\r\n};\r\n\r\nconst ContestParticipants = () => {\r\n  const [firstListPart, setFirstListPart] = useState<IParticipantListProps[]>();\r\n  const [secondListPart, setSecondListPart] =\r\n    useState<IParticipantListProps[]>();\r\n\r\n  const devideArray = (array: IParticipantListProps[]) => {\r\n    const array_size = 10;\r\n\r\n    const sliced_array = [];\r\n\r\n    for (let i = 0; i < array.length; i += array_size) {\r\n      sliced_array.push(array.slice(i, i + array_size));\r\n    }\r\n\r\n    setFirstListPart(sliced_array[0]);\r\n    setSecondListPart(sliced_array[1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    devideArray(participantsList);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <UsersDataTemplate title=\"Топ участников конкурса реферелов\">\r\n            <UsersAddDataTemplate txhash=\"Логин\" sum=\"Сумма\"/>\r\n            <>\r\n              {firstListPart?.map((item) => (\r\n                <UsersTemplate\r\n                  key={item.id}\r\n                  txhash={item.txhash}\r\n                  sum={item.sum}\r\n                />\r\n              ))}\r\n            </>\r\n          </UsersDataTemplate>\r\n          <UsersDataTemplate title=\"Топ участников конкурса инвесторов\">\r\n           <UsersAddDataTemplate txhash=\"Логин\" sum=\"Сумма\"/>\r\n            <>\r\n              {secondListPart?.map((item) => (\r\n                <UsersTemplate\r\n                  key={item.id}\r\n                  txhash={item.txhash}\r\n                  sum={item.sum}\r\n                />\r\n              ))}\r\n            </>\r\n          </UsersDataTemplate>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContestParticipants;\r\n","import React, { useRef, useLayoutEffect }  from 'react';\r\nimport TitleHeader from '../components/TitleHeader';\r\nimport ContestInformation from '../components/ContestInformation';\r\nimport ContestParticipants from '../components/ContestParticipants/ContestParticipants';\r\n\r\nconst styles = {\r\n  wrapper: `flex flex-col gap-40`\r\n}\r\n\r\nconst ContestsPage = () => {\r\n  const contestRef = useRef<HTMLDivElement | null>(null)\r\n  \r\n  const handleScroll = (ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      window.scrollTo({\r\n        top: ref.offsetTop,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    handleScroll(contestRef.current)\r\n  })\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <TitleHeader titleName=\"Конкурсы\" refCurrent={contestRef} />\r\n      <ContestInformation />\r\n      <ContestParticipants />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContestsPage","import React from 'react';\r\nimport { IInformationTemplateProps } from '../../interfaces/IInformationTemplateProps';\r\nimport './styles.css'\r\nconst styles = {\r\n  body: `\r\n    w-full h-max rounded-3xl p-20 inset-shadow\r\n    phone:p-4\r\n    tablet:p-8\r\n    laptop:p-16\r\n    desktop:p-16\r\n  `,\r\n  content: `\r\n    flex flex-col gap-8 items-center justify-center\r\n  `,\r\n  title: `\r\n    font-english font-[900] text-white text-[3.5rem]\r\n    phone:text-[2.5rem] phone:text-center\r\n    tablet:text-[3rem]\r\n  `,\r\n}\r\n\r\nconst InformationTemplate: React.FC<IInformationTemplateProps> = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.content}>\r\n        <h1 className={styles.title}>{title}</h1>\r\n        <div>{children}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InformationTemplate","import React, { useState, useEffect } from \"react\";\r\nimport { IUserAddData } from '../interfaces/IUserAddData';\r\n\r\nconst styles = {\r\n  statsContainer: `\r\n    px-12 py-6 bg-light_blue flex flex-row justify-between items-center shadow shadow-3xl\r\n    phone:px-4\r\n  `,\r\n  stats: `\r\n    font-russian font-normal text-white text-[1.25rem]\r\n    phone:text-[0.85rem]\r\n  `,\r\n}\r\n\r\nconst UsersAddDataTemplate: React.FC<IUserAddData> = ({ txhash, sum, donated, method, date, status }) => {\r\n  const [user, setUser] = useState(false);\r\n  const [money, setMoney] = useState(false);\r\n  const [donation, setDonation] = useState(false);\r\n  const [way, setWay] = useState(false);\r\n  const [donDate, setDonDate] = useState(false);\r\n  const [txStatus, setTxStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(txhash?.length) setUser(true)\r\n    if(sum?.length) setMoney(true)\r\n    if(donated?.length) setDonation(true)\r\n    if(method?.length) setWay(true)\r\n    if(date?.length) setDonDate(true)\r\n    if(status?.length) setTxStatus(true)\r\n  }, [txhash, sum, donated, method, date, status])\r\n\r\n  \r\n  return (\r\n    <div className={styles.statsContainer}>\r\n      {user && <span className={styles.stats}>{txhash}</span>}      \r\n      {money && <span className={styles.stats}>{sum}</span>}\r\n      {donation && <span className={styles.stats}>{donated}</span>}\r\n      {way && <span className={styles.stats}>{method}</span>}\r\n      {donDate && <span className={styles.stats}>{date}</span>}\r\n      {txStatus && <span className={styles.stats}>{status}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersAddDataTemplate;\r\n","import React from 'react';\r\nimport { IContestsParticipantsTemplateProps } from '../interfaces/IContestsParticipantsTemplateProps';\r\n\r\n\r\nconst styles = {\r\n  body: `\r\n    w-[49%] flex flex-col\r\n    phone:w-full\r\n    tablet:w-full\r\n  `,\r\n  titleContainer: `px-12 py-6 rounded-tl-3xl rounded-tr-3xl bg-blue`,\r\n  title: `\r\n    font-english font-[900] text-white text-[1.75rem] text-center\r\n    phone:text-[1.5rem]\r\n  `,\r\n  usersContainer: `w-full flex flex-col`,\r\n  span: `font-russian font-normal text-dark_blue text-[1.25rem]`\r\n}\r\n\r\nconst ContestsParticipantsTemplate: React.FC<IContestsParticipantsTemplateProps> = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.titleContainer}>\r\n        <h1 className={styles.title}>\r\n          {title}\r\n        </h1>\r\n      </div>\r\n      <div className={styles.usersContainer}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContestsParticipantsTemplate","import React from \"react\";\r\nimport { IUsersTemplateProps } from \"../interfaces/IUsersTemplateProps\";\r\n\r\n\r\nconst styles = {\r\n  body: `py-6 px-12 w-full flex flex-row justify-between odd:bg-sky_blue shadow shadow-md even:bg-white `,\r\n  span: `\r\n    font-russian font-normal text-dark_blue text-[1.25rem]\r\n    phone:text-[1rem]\r\n  `,\r\n};\r\n\r\nconst UsersTemplate: React.FC<IUsersTemplateProps> = ({ txhash, sum }) => {\r\n  return (\r\n    <div className={styles.body}>\r\n      <span className={styles.span}>\r\n        {txhash?.substring(0, 7)}...{txhash?.substring(32, 42)}\r\n      </span>\r\n      <span className={styles.span}>{sum} ₽</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersTemplate;\r\n"],"names":["participantsList","id","txhash","sum","styles","name","className","titleName","refCurrent","ref","InformationTemplate","title","useState","firstListPart","setFirstListPart","secondListPart","setSecondListPart","useEffect","array","sliced_array","i","length","push","slice","devideArray","UsersDataTemplate","UsersAddDataTemplate","map","item","UsersTemplate","contestRef","useRef","useLayoutEffect","current","window","scrollTo","top","offsetTop","left","behavior","TitleHeader","children","donated","method","date","status","user","setUser","money","setMoney","donation","setDonation","way","setWay","donDate","setDonDate","txStatus","setTxStatus","substring"],"sourceRoot":""}