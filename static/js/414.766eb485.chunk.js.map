{"version":3,"file":"static/js/414.766eb485.chunk.js","mappings":"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","sources":["assets/icons/arrow-accord.svg","templates/QnaATemplate/QnATemplate.tsx","components/QnA/qna-list.ts","components/QnA/QnA.tsx","components/StatisticsData.tsx","components/Statistics.tsx","components/Title/Title.tsx","pages/HomePage.tsx","templates/InformationTemplate/InformationTemplate.tsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowAccord(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 12C0 18.6274 5.37256 24 12 24C18.6274 24 24 18.6274 24 12C24 5.37261 18.6274 4.95911e-05 12 4.95911e-05C5.37569 0.00748444 0.00748369 5.37569 0 12Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.11282 9.80878C4.21825 10.7449 4.21825 12.2191 5.11282 13.1552C6.03635 14.0793 7.53416 14.0798 8.45823 13.1562C8.45857 13.1559 8.45891 13.1556 8.45925 13.1552L9.39838 12.2161V18.261C9.39838 19.7017 10.5663 20.8696 12.0071 20.8696C13.4478 20.8696 14.6158 19.7017 14.6158 18.261V12.2161L15.5549 13.1552C16.5417 14.0123 18.0365 13.9071 18.8936 12.9202C19.6692 12.0271 19.6664 10.6985 18.8868 9.80878L13.1028 4.02477C12.4915 3.41375 11.5008 3.41375 10.8895 4.02477L5.11282 9.80878Z\",\n    fill: \"#2790CB\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowAccord);\nexport default __webpack_public_path__ + \"static/media/arrow-accord.e77e9858ebc9edd90eff6b3f300aa140.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport arrow from \"../../assets/icons/arrow-accord.svg\";\r\nimport { IQnATemplateProps } from \"../../interfaces/IQnATemplateProps\";\r\nimport \"./styles.css\";\r\n\r\nconst styles = {\r\n  body: `rounded-3xl flex flex-col items-center transition-all ease-in-out duration-300`,\r\n  questionContainer: `\r\n    relative z-[100] w-full flex flex-row justify-between items-center p-6 rounded-full bg-light_blue\r\n    phone:p-4\r\n  `,\r\n  questionText: `\r\n    font-english font-[900] text-white text-[1.25rem]\r\n    phone:text-[1.2rem]\r\n  `,\r\n  answersContainer: `p-6 shadow-md rounded-bl-3xl rounded-br-3xl overflow-hidden`,\r\n  answersText: `\r\n    font-russian font-normal text-dark_blue text-[1.25rem]\r\n    phone:text-[1.2rem]\r\n  `,\r\n};\r\n\r\nconst QnATemplate: React.FC<IQnATemplateProps> = ({ question, answer }) => {\r\n  const [clicked, setClicked] = useState<boolean>(false);\r\n\r\n  const handleToggle = () => {\r\n    if (!clicked) {\r\n      return setClicked(true);\r\n    }\r\n    setClicked(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.body} ${clicked ? \"h-auto\" : \"h-[70px]\"}`}>\r\n      <button className={styles.questionContainer} onClick={handleToggle}>\r\n        <h2 className={styles.questionText}>{question}</h2>\r\n        <img\r\n          src={arrow}\r\n          style={{ transition: \"all 300ms ease-in-out\" }}\r\n          className={clicked ? \"rotate-180\" : \"rotate-0\"}\r\n          alt=\"arrow\"\r\n        />\r\n      </button>\r\n      <div className={styles.answersContainer}>\r\n        <p className={styles.answersText}>{answer}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QnATemplate;\r\n","export const qnaList = [\r\n  {\r\n    id: 1,\r\n    question: \"Как начать играть в chickengame?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Как пополнить баланс?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Есть ли у вас баллы, pay points, cash points и др.?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Как скоро я смогу начать выводить деньги?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Есть ли еще какой либо заработок на проекте?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    question: \"Есть ли у вас партнерская программа?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 7,\r\n    question: \"Как мне привлечь рефералов?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 8,\r\n    question: \"Как вывести средстав с проекта?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 9,\r\n    question: \"Как восстановить пароль от личного кабинета?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n  {\r\n    id: 10,\r\n    question: \"Не нашли ответа?\",\r\n    answer:\r\n      \"Пройдите быструю и простую регистрацию в проекте, перейдите в раздел Покупка куриц.Выберите для себя подходящую курицу и cовершите покупку, после покупки вам только остается собирать прибыль в вкладке Улей и выводить реальные денежные средства, на свой электронный кошелек. Так же можно производить обмен со счета для вывода, на счет для покупок и покупать больше пчёл и получать еще больше прибыли.\",\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport QnATemplate from \"../../templates/QnaATemplate/QnATemplate\";\r\nimport { IQnAListProps } from \"../../interfaces/IQnAListProps\";\r\nimport { qnaList } from './qna-list';\r\n\r\nconst styles = {\r\n  wrapper: `w-screen flex justify-center items-center`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full\r\n    tablet:w-full\r\n    laptop:w-full\r\n    desktop:w-[90%]\r\n  `,\r\n  content: `flex flex-col gap-20`,\r\n  title: `\r\n    font-english font-[900] text-dark_blue text-[3.5rem] text-center\r\n    phone:text-[3rem]\r\n  `,\r\n  qnaContainer: `\r\n    flex flex-row justify-between gap-10\r\n    phone:flex-col phone:p-4\r\n    tablet:flex-col tablet:p-6\r\n    laptop:flex-col laptop:p-12\r\n  `,\r\n  list: `w-full flex flex-col gap-5`\r\n};\r\n\r\nconst QnA = () => {\r\n  const [firstListPart, setFirstListPart] = useState<IQnAListProps[]>()\r\n  const [secondListPart, setSecondListPart] = useState<IQnAListProps[]>()\r\n\r\n  const devideArray = (array: IQnAListProps[]) => {\r\n    const array_size = 5;\r\n    \r\n    const sliced_array = [];\r\n    \r\n    for (let i = 0; i <array.length; i += array_size) {\r\n        sliced_array.push(array.slice(i, i + array_size));\r\n    }\r\n    \r\n    setFirstListPart(sliced_array[0])\r\n    setSecondListPart(sliced_array[1])\r\n  }\r\n\r\n  useEffect(() => {\r\n    devideArray(qnaList)\r\n  }, [])\r\n  \r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <h1 className={styles.title}>Готовые ответы на вопросы</h1>\r\n          <ul className={styles.qnaContainer}>\r\n            <div className={styles.list}>\r\n              {firstListPart?.map((item) => (\r\n                <QnATemplate\r\n                  key={item.id}\r\n                  question={item.question}\r\n                  answer={item.answer}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className={styles.list}>\r\n              {secondListPart?.map((item) => (\r\n                <QnATemplate\r\n                  key={item.id}\r\n                  question={item.question}\r\n                  answer={item.answer}\r\n                />\r\n              ))}\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QnA;\r\n","import React, { useState } from \"react\";\r\n\r\nconst styles = {\r\n  wrapper: `\r\n    flex flex-row gap-10 flex-1\r\n    phone:grid phone:grid-rows-2 phone:grid-cols-2\r\n  `,\r\n  cell: `\r\n    flex flex-col justify-center items-center text-white text-[2.25rem] font-english font-[900]\r\n    text-[1.8rem]\r\n  `,\r\n  span: `\r\n    text-white text-[1.5rem] font-normal\r\n    phone:text-[1.2rem]\r\n  `,\r\n};\r\n\r\nconst StatisticsData = () => {\r\n  const [players, setPlayers] = useState<number>(22070);\r\n  const [reserve, setReserve] = useState<number>(6228575);\r\n  const [money, setMoney] = useState<number>(4419659);\r\n  const [days, setDays] = useState<number>(110);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.cell}>\r\n        {players}\r\n        <span className={styles.span}>Игроков</span>\r\n      </div>\r\n      <div className={styles.cell}>\r\n        {reserve}\r\n        <span className={styles.span}>Пополнено ₽</span>\r\n      </div>\r\n      <div className={styles.cell}>\r\n        {money}\r\n        <span className={styles.span}>Выплачено ₽</span>\r\n      </div>\r\n      <div className={styles.cell}>\r\n        {days} дней <span className={styles.span}>работаем</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsData;\r\n","import React from 'react';\r\nimport InformationTemplate from '../templates/InformationTemplate/InformationTemplate';\r\nimport StatisticsData from './StatisticsData';\r\n\r\nconst styles = {\r\n  wrapper: `w-screen flex justify-center items-center`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full phone:px-2\r\n    tablet:w-full tablet:px-4\r\n    laptop:w-full laptop:px-6\r\n    desktop:w-[90%]\r\n  `\r\n}\r\n\r\nconst Statistics = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <InformationTemplate title=\"Статистика проекта\">\r\n          <StatisticsData />\r\n        </InformationTemplate>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics","import React from \"react\";\r\nimport ButtonTemplate from \"../../templates/ButtonTemplate/ButtonTemplate\";\r\nimport gift from \"../../assets/icons/gift.svg\";\r\nimport cloud from \"../../assets/images/cloud.png\";\r\nimport { ITitleProps } from \"../../interfaces/ITitleProps\";\r\nimport \"./styles.css\";\r\n\r\nconst styles = {\r\n  wrapper: `w-full flex justify-center items-center title-background`,\r\n  container: `\r\n    w-[70%]\r\n    phone:w-full phone:flex phone:justify-center\r\n    tablet:w-full tablet:flex tablet:justify-center\r\n  `,\r\n  titlePage: `\r\n    flex flex-row items-center justify-between h-screen\r\n    phone:items-center\r\n    tablet:items-center\r\n    laptop:items-center\r\n  `,\r\n  titleText: `\r\n    font-english text-[6.6rem] text-dark_blue font-[900]\r\n    phone:text-[3rem] phone:text-center\r\n  `,\r\n  content: `\r\n    w-[590px]\r\n    phone:w-full phone:flex phone:flex-col phone:justify-center phone:items-center\r\n    tablet:w-full tablet:flex tablet:flex-col tablet:justify-center tablet:items-center\r\n\r\n  `,\r\n  subTitleText: `\r\n    text-[3rem] text-dark_blue font-normal ml-3 mix-blend-darken\r\n    phone:text-[1.8rem] phone:text-center\r\n  `,\r\n  descrition: `\r\n    w-[400px] text-[1.25rem] text-dark_blue font-normal mt-8 ml-3 mix-blend-darken\r\n    phone:w-[300px] phone:text-[1.2rem] phone:text-center\r\n    tablet:text-center\r\n  `,\r\n  btnContainer: `\r\n    w-max flex flex-row gap-8 mt-8\r\n    phone:flex-col phone:items-center phone:gap-8\r\n  `,\r\n  getChickenBtn: `\r\n    flex flex-row gap-2 items-center py-3 px-8 rounded-full bg-green text-[1.2rem] text-white font-russian font-semibold outline-none get-chicken-btn \r\n    phone:mx-2 phone:px-8 phone:text-[1rem]\r\n  `,\r\n  cloud: `\r\n    relative mb-[500px]\r\n    phone:hidden\r\n    tablet:hidden\r\n    laptop:hidden\r\n  `,\r\n  cloudTextContainer: `\r\n    absolute top-[85px] left-[95px] flex flex-col\r\n    desktop:top-[65px] desktop:left-[65px]\r\n  `,\r\n  cloudTextSpanTitle: `\r\n    text-[2rem] text-blue font-english font-bold\r\n    desktop:text-[1.8rem]\r\n  `,\r\n  cloudTextSpanText: `text-[1rem] text-blue font-russian font-bold`\r\n};\r\n\r\nconst Title: React.FC<ITitleProps> = ({ homeRef }) => {\r\n  return (\r\n    <div ref={homeRef} className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <section className={styles.titlePage}>\r\n          <div className={styles.content}>\r\n            <h1 className={styles.titleText}>ChickenGame</h1>\r\n            <h3 className={styles.subTitleText}>Симулятор курятника</h3>\r\n            <p className={styles.descrition}>\r\n              Покупай куриц, собирай яйца и зарабатывай на этом реальные деньги.\r\n            </p>\r\n            <div className={styles.btnContainer}>\r\n              <ButtonTemplate text=\"Авторизация\" link=\"/\" />\r\n              <button type=\"button\" className={styles.getChickenBtn}>\r\n                <img src={gift} alt=\"gift\" />\r\n                <span>Получить курицу в подарок</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <div className={styles.cloud}>\r\n              <div className={styles.cloudTextContainer}>\r\n                <span className={styles.cloudTextSpanTitle}>ChickenGame.org</span>\r\n                <span className={styles.cloudTextSpanText}>Покупай куриц и зарабатывай</span>\r\n              </div>\r\n              <img src={cloud} alt=\"cloud\" />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { useRef, useLayoutEffect } from \"react\";\r\nimport Title from \"../components/Title/Title\";\r\nimport Statistics from \"../components/Statistics\";\r\nimport About from \"../components/About/About\";\r\nimport Advantages from \"../components/Advantages\";\r\nimport QnA from \"../components/QnA/QnA\";\r\nimport ChickenToBuy from \"../components/ChickenToBuy/ChickenToBuy\";\r\n\r\nconst styles = {\r\n  wrapper: `flex flex-col gap-40`,\r\n};\r\n\r\nconst HomePage = () => {\r\n  const homeRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const handleScroll = (ref: HTMLDivElement | null) => {\r\n    if (ref) {\r\n      window.scrollTo({\r\n        top: ref.offsetTop,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    handleScroll(homeRef.current)\r\n  })\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Title homeRef={homeRef}/>\r\n      <Statistics />\r\n      <About />\r\n      <Advantages />\r\n      <QnA />\r\n      <ChickenToBuy />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { IInformationTemplateProps } from '../../interfaces/IInformationTemplateProps';\r\nimport './styles.css'\r\nconst styles = {\r\n  body: `\r\n    w-full h-max rounded-3xl p-20 inset-shadow\r\n    phone:p-4\r\n    tablet:p-8\r\n    laptop:p-16\r\n    desktop:p-16\r\n  `,\r\n  content: `\r\n    flex flex-col gap-8 items-center justify-center\r\n  `,\r\n  title: `\r\n    font-english font-[900] text-white text-[3.5rem]\r\n    phone:text-[2.5rem] phone:text-center\r\n    tablet:text-[3rem]\r\n  `,\r\n}\r\n\r\nconst InformationTemplate: React.FC<IInformationTemplateProps> = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.content}>\r\n        <h1 className={styles.title}>{title}</h1>\r\n        <div>{children}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InformationTemplate"],"names":["styles","question","answer","useState","clicked","setClicked","className","onClick","src","arrow","style","transition","alt","qnaList","id","firstListPart","setFirstListPart","secondListPart","setSecondListPart","useEffect","array","sliced_array","i","length","push","slice","devideArray","map","item","players","reserve","money","days","InformationTemplate","title","homeRef","ref","ButtonTemplate","text","link","type","gift","useRef","useLayoutEffect","current","window","scrollTo","top","offsetTop","left","behavior","Statistics","About","Advantages","QnA","ChickenToBuy","children"],"sourceRoot":""}